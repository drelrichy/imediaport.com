<% include ../partials/head %>
<% include ../partials/top-header %>
<% include ../cloud/engine_channel%>
<% include ../cloud/form_channel%>


<script>
      // 2. This code loads the IFrame Player API code asynchronously.
      var tag = document.createElement('script');

      tag.src = "https://www.youtube.com/iframe_api";
      var firstScriptTag = document.getElementsByTagName('script')[0];
      firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

      // 3. This function creates an <iframe> (and YouTube player)
      //    after the API code downloads.
      var iplayer;
      function onYouTubeIframeAPIReady() {
        iplayer = new YT.Player('iplayer', {
          height: '100%',
          width: '360px',
          videoId: 'M7lc1UVf-VE',
          playerVars: {
            'playsinline': 1
          },
          events: {
            'onReady': onPlayerReady,
            'onStateChange': onPlayerStateChange
          }
        });
		if (event.target.M=="player") isPlayer = true;
      
      if (event.target.M=="cueplayer") isCuePlayer = true;
      //console.log(event.target, " is now Ready to play");
      console.log(event.target.M, "- API is now Ready to play");
    
      }

      // 4. The API will call this function when the video player is ready.
      function onPlayerReady(event) {
        event.target.playVideo();
      }

      // 5. The API calls this function when the player's state changes.
      //    The function indicates that when playing a video (state=1),
      //    the player should play for six seconds and then stop.
      var done = false;
      function onPlayerStateChange(event) {
        if (event.data == YT.PlayerState.PLAYING && !done) {
          setTimeout(stopVideo, 6000);
          done = true;
        }
      }
      function stopVideo() {
        iplayer.stopVideo();

	
      }

	  var iplayer;
      function onYouTubeIframeAPIReady() {
        player = new YT.Player('player', {
          height: '100%',
          width: '360px',
          videoId: 'M7lc1UVf-VE',
          playerVars: {
            playsinline : 1,
            autoplay:1,
            mute:1,
          control:1

          },
          events: {
            'onReady': onPlayerReady,
            'onStateChange': onPlayerStateChange
          }
        });
      }

    </script>





<% include ../partials/ending%>