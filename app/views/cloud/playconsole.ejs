
<%
$HR="https://imediaport.com:4646/";
//const origin = req.get('origin')
//const username1 =(typeof user != 'undefined')?  user.username:'New';
//const name =(typeof user != 'undefined')?  user.name:'guest';
console.log ("W e    have got channel U all ...", channel);
console.log ("W e    have got channel U all ...", basechannel);
const ourchannel =(typeof channel != 'undefined')?  channel.channel_id:'NewChannel';
var channel_id = ourchannel;
%>

<script>
  if(typeof GLOBAL =='undefined') GLOBAL = {};
  

  
  
  //const channel = {&quot;username&quot;:&quot;ogutatv@onetv.ng&quot;,&quot;role&quot;:&quot;admin&quot;,&quot;channel_id&quot;:&quot;ogutatv&quot;,&quot;channel_name&quot;:&quot;ogutatv&quot;,&quot;logo&quot;:&quot;https://imediaport.com/assets/img/logo_hold.png&quot;};

  const user =  {hostname:'<%=user.hostname%>', adminchannel:{ channel_id:' <%=user.adminchannel[0].channel_id%>',  role:'<%=user.adminchannel[0].role%>'}, username: '<%=user.username%>', name: '<%=user.name%>', surname:'<%=user.surname%>'};
  const channel ={channel_id:' <%=channel.channel_id%>',channel_name:'<%=channel.channel_name%>'};

  //work loaad
  ///  res.render('cloud/playconsole', { channel, adminroles:auth_admins,  user : req.user , sess : req.session , subscr : req.sub  });
GLOBAL.user= user ;
 GLOBAL.username = '<%=typeof user.username != 'undefined' ? user.username : '' %>';
 GLOBAL.channel_id= '<%= typeof channel.channel_id != 'undefined' ? channel.channel_id : '' %>';
 GLOBAL.admin_role='<%= typeof channel != 'undefined' ? channel.role : '' %>';
 GLOBAL.adminroles='<%= typeof adminroles != 'undefined' ? adminroles : [] %>';
 GLOBAL.sess='<%= typeof sess != 'undefined' ? sess: [] %>';
 GLOBAL.day="";
 GLOBAL.week=0;


 Date.prototype.getWeek = function() {
      var onejan = new Date(this.getFullYear(), 0, 1);
      return Math.ceil((((this - onejan) / 86400000) + onejan.getDay() + 1) / 7);
  }

  var weekNumber = (new Date()).getWeek();

  var dayNames = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];
  var now = new Date();
GLOBAL.day = dayNames[now.getDay()];
GLOBAL.week= weekNumber;


</script>

<%  include ../partials/head  %>

<script src="<%-$HR%>lib/imedia/playtime.engine.js"></script>
<script src="<%-$HR%>lib/imedia/playbox.engine.js"></script>
<script src="<%-$HR%>lib/imedia/playconsole.engine.js"></script>


<% include ../partials/topnavbar  %>


<%include ../cloud/cpanel/main%>


<script>
      // 2. This code loads the IFrame Player API code asynchronously.
      var tag = document.createElement('script');

      tag.src = "https://www.youtube.com/iframe_api";
      var firstScriptTag = document.getElementsByTagName('script')[0];
      firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

      // 3. This function creates an <iframe> (and YouTube player)
      //    after the API code downloads.
      var player;
      function onYouTubeIframeAPIReady() {
        player = new YT.Player('player', {
          height: '160px',
          width: '360px',
          videoId: 'M7lc1UVf-VE',
          playerVars: {
            playsinline: 1,
            autoplay: 1,
           control: 1,
           origin: imedia.origin,
          },
          events: {
            'onReady': onPlayerReady,
            'onStateChange': onPlayerStateChange
          }
        });
		if (event.target.M=="player") isPlayer = true;
      
      if (event.target.M=="cueplayer") isCuePlayer = true;
      //console.log(event.target, " is now Ready to play");
      console.log(event.target.M, "- API is now Ready to play");
    
      }

      // 4. The API will call this function when the video player is ready.
      function onPlayerReady(event) {
        event.target.playVideo();
      }

      // 5. The API calls this function when the player's state changes.
      //    The function indicates that when playing a video (state=1),
      //    the player should play for six seconds and then stop.
      var done = false;
      function onPlayerStateChange(event) {
        if (event.data == YT.PlayerState.PLAYING && !done) {
          setTimeout(stopVideo, 6000);
          done = true;
        }
      }
      function stopVideo() {
        player.stopVideo();

	
      }

	  var player2;
      function onYouTubeIframeAPIReady() {
        player2 = new YT.Player('player', {
          height: '100%',
          width: '360px',
          videoId: 'M7lc1UVf-VE',
          playerVars: {
            scrollbars:0,
            playsinline : 1,
            autoplay:1,
           origin: imedia.origin,
            mute:1,
          control:1

          },
          events: {
            'onReady': onPlayerReady,
            'onStateChange': onPlayerStateChange
          }
        });
      }

      //console.log("GOBAL =>>>>>>>>>>>>>>>>",GLOBAL);
      console.log ("----------------global----------->", GLOBAL);

     //console.log ("-----------------session---------->", sessionValue);
    </script>


<% include 
../partials/ending
%>